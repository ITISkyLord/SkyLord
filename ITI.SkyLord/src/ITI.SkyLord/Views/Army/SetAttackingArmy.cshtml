@addTagHelper "*, Microsoft.AspNet.Mvc.TagHelpers"
@model ITI.SkyLord.ViewModel.Armies.SetAttackingArmyViewModel
@using ITI.SkyLord

@{
    ViewData["Title"] = "Armées";
    Layout = "_Layout";
}

<style>
    .ListArmy td {
        border: 2px solid black;
        padding-right: 5px;
        padding-left: 5px;
    }
</style>

<h1>Armées</h1>
<a asp-controller="Army" asp-action="SetSendRessources" asp-route-islandId="@Model.Layout.IslandId">Envoyer des ressources</a>

<h2>Armées en cours de mouvement</h2>
@{
    var allAttackingArmies = Model.AllPlayerArmiesEvent.Where(a => a.Army.ArmyState == ArmyState.movement).OrderBy(a => a.EndingDate).ToList();
    if (allAttackingArmies.Count != 0)
    {
        foreach (var army in allAttackingArmies)
        {
            if (army.Army.ArmyState == ArmyState.movement)
            {
                <p>
                    @{
                        // Si c'est bien une attaque et non un approvisionnement.
                        // Gérer le retour, c'est pas toujours une attaque.
                        if( @army.Destination.Owner != null )
                        {
                            if( army.ArmyMovement == ITI.SkyLord.Models.Entity_Framework.Entites.Events.ArmyMovement.attacking )
                            {
                                <div>Attaque vers @army.Destination.Name [@army.Destination.Coordinates.X, @army.Destination.Coordinates.Y] chez @army.Destination.Owner.Name</div>
                            }
                            else if( army.ArmyMovement == ITI.SkyLord.Models.Entity_Framework.Entites.Events.ArmyMovement.sendingRessources )
                            {
                                <div>Envoi de ressources vers @army.Destination.Name [@army.Destination.Coordinates.X, @army.Destination.Coordinates.Y] chez @army.Destination.Owner.Name</div>
                            }
                            else if( army.ArmyMovement == ITI.SkyLord.Models.Entity_Framework.Entites.Events.ArmyMovement.returning )
                            {
                                <div>Vos unités sont en train de revenir de @army.Destination.Name [@army.Destination.Coordinates.X, @army.Destination.Coordinates.Y] chez @army.Destination.Owner.Name</div>
                            }
                        }
                        else
                        {
                            <div>Attaque vers une île barbare [@army.Destination.Coordinates.X, @army.Destination.Coordinates.Y]</div>
                        }
                    }
                    <br />
                    Arrivée à @army.EndingDate.Hour:@army.EndingDate.Minute:@army.EndingDate.Second
                </p>
            }
            <hr />

        }
    }
    else
    {
        <p>Aucune attaque planifiée</p>
    }
}


<h2>Planification d'une attaque</h2>
@if (Model.CurrentDefenseArmy != null)
{
    <form asp-controller="Army" asp-action="Fight" asp-route-islandId="@Model.Layout.IslandId" method="post" role="form">

        <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>

        @* Tableau pour voir nos unité et voir qui l'on envoi *@
        <table class="ListArmy">
            <tr>
                <td>Unité</td>
                <td>Disponible</td>
                <td>A envoyer</td>
            </tr>

            @foreach ( Regiment r in Model.CurrentDefenseArmy.Regiments )
            {
            <tr>
                <td>@r.Unit.Name</td>
                <td>@r.Number</td>
                <td><input type="number" min="0" max="@r.Number" step="1" asp-for="UnitsToSend[r.Unit.UnitName.ToString()]" value="0" /></td>
            </tr>
            }
        </table>

        <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>

        @* Petit moyen pour chercher l'île en fonction des coordonnées *@
        <label for="pos-x"></label><input type="number" name="pos-x" value="@Model.EnnemyIslands.First().Coordinates.X" />
        <label for="pos-y"></label><input type="number" name="pos-y" value="@Model.EnnemyIslands.First().Coordinates.Y" />

        @* Choix de la cible *@
        <select asp-for="@Model.Target" id="EnnemyToAttack">
            @foreach( Island i in Model.EnnemyIslands )
            {
                string name = "";
                if (i.Owner == null) { name = "Île sauvage"; }
                else { name = i.Owner.Name; }

                string selected = "";
                if (Model.EnnemyIslandId == i.IslandId)
                {
            <option value="@i.IslandId" pos-x="@i.Coordinates.X" pos-y="@i.Coordinates.Y" nameOwner="@name" selected="selected">
                @name [@i.Coordinates.X, @i.Coordinates.Y]
            </option>
                }
                else
                {
            <option value="@i.IslandId" pos-x="@i.Coordinates.X" pos-y="@i.Coordinates.Y" nameOwner="@name">
                @name [@i.Coordinates.X, @i.Coordinates.Y]
            </option>
                }
            }
        </select>

        <input type="submit" value="Envoyer les unités" />

    </form>
    <script src="/js/AttackManager.js"></script>
}
else
{
    <p>Vous n'avez pas encore d'armée, allez au portail d'invocation pour vous préparer à la guerre.</p>
}
