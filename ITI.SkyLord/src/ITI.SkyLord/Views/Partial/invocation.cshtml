@model ITI.SkyLord.ViewModel.Partial.BuildingPartialViewModel

<div class="head">
    <h2>@BuildingManager.StaticBuildingNameToName(Model.CurrentBuilding.BuildingName)</h2>
</div>


@{
    Write(Html.Partial("~/Views/Partial/LevelUpBuilding.cshtml", Model));
}


<div class="head">
    <h3>Armée actuelle sur place :</h3>
</div>

<table>

    @foreach (var unit in Model.AvailableUnit)
    {
        <form asp-controller="Army" asp-action="AddUnit" asp-route-islandId="@Model.Layout.CurrentIsland.IslandId">
            <input type="hidden" asp-for="UnitTarget" value="@unit.Name" />
            <div class="row" style="margin-bottom: 20px;">
                <div class="col-lg-2">@unit.Name</div>
                @{
                    int number = 0;
                    if (Model.CurrentArmy != null)
                    {
                        var regiment = Model.CurrentArmy.Regiments.Where(r => r.Unit.Name == unit.Name).FirstOrDefault();
                        number = regiment == null ? 0 : regiment.Number;
                    }

                }
                <div class="col-lg-1">@number</div>
                <div class="col-lg-1">@unit.UnitCost.Wood Bois</div>
                <div class="col-lg-1">@unit.UnitCost.Metal Métal</div>
                <div class="col-lg-1">@unit.UnitCost.Magic Magie</div>
                <div class="col-lg-1">@unit.UnitCost.Cristal Cristal</div>
                @{
// Calcul du max d'unité que l'on peut faire pour cette unité

                }
                <div class="col-lg-3"><input style="width: 100%;" type="number" asp-for="UnitAmount" min="0" step="1" value="0" /></div>
                <div class="col-lg-1"><input type="submit" value="Former" /></div>
            </div>
        </form>
                    }
</table>
