@addTagHelper "*, Microsoft.AspNet.Mvc.TagHelpers"

@model ITI.SkyLord.ViewModel.SeeIslands.SeeIslandViewModel

@using System.Collections.Generic
@using ITI.SkyLord
@using ITI.SkyLord.ViewModel.Partial
@using ITI.SkyLord.Models.Entity_Framework.Entites.Events

@{
    ViewData["Title"] = "View Islands";
    Layout = "_Layout";
    Model.CurrentIsland = Model.CurrentIsland;
}

<div class="MainContentSeeMyIsland">
    <div class="row">
        <div id="Test">
            <div id="SeeMyIsland">
                    @for( var i = 1; i != 11; i++ )
                    {
                        Building myBuilding;
                        string name;

                        @if( Model.DicoBuildings.TryGetValue( i.ToString(), out myBuilding ) )
                        {
                            name = myBuilding.BuildingName.ToString();
                        }
                        else
                        {
                            name = "empty";
                        }

                        <div class="Building" buildingname="@name" id="place_@i" templateid="@i">
                            @{
                                if(myBuilding != null)
                                {
                                    switch(myBuilding.BuildingName)
                                    {
                                        case BuildingName.woodField:
                                        case BuildingName.academy:
                                        case BuildingName.barrack :
                                            name += ".png";
                                            break;

                                        default :
                                            name += ".gif";
                                            break;
                                    }
                                }
                            }
                            <img src="~/images/SeeMyIsland/@name" alt=""/>
                        </div>
                      }
            </div>
        </div>
        <div id="UI">

            @for( var i = 1; i != 11; i++ )
            {
                Building myBuilding;
                string name;

                @if( Model.DicoBuildings.TryGetValue( i.ToString(), out myBuilding ) )
                {
                    name = myBuilding.BuildingName.ToString();
                }
                else
                {
                    name = "empty";
                }

                <div class="templatebuilding" id="ui_@i" buildingname="@name" style="display:none;">
                    @{
                        // On cherche le next s'il existe
                        Level nextLevel = null;
                        Model.NextLevel.TryGetValue( i, out nextLevel );

                        // On cherche les buildings event s'ils existent
                        List<BuildingEvent> buildingEvent = new List<BuildingEvent>();
                        Model.AllBuildingEventOnIsland.TryGetValue( i, out buildingEvent );

                        bool isInConstruction = Model.AllBuildingEventOnIsland.Where(kvp => kvp.Value.Count != 0).Count() != 0;

                        // On balance le view model à notre partial
                        BuildingPartialViewModel partialModel = new BuildingPartialViewModel()
                        {
                            CurrentBuilding = myBuilding,
                            Position = i,
                            AvailableBuildings = Model.AvailableBuildings,
                            Layout = Model.Layout,
                            CurrentArmy = Model.CurrentArmy,
                            AvailableUnit = Model.AvailableUnit,
                            AllUnits = Model.AllUnits,
                            NextBuildingLevel = nextLevel,
                            EventsOnBuilding = buildingEvent,
                            TechnologyDisplays = Model.TechnologyDisplays,
                            TargetTechnology = Model.TargetTechnology,
                            TechnologyManager = Model.TechnologyManager,
                            UnitsQueue = Model.UnitsQueue,
                            IsInConstruction =  isInConstruction

                        };
                        Write( Html.Partial( "~/Views/Partial/" + name + ".cshtml", partialModel ) );
                    }
                </div>
                        }
        </div>
    
    </div>
</div>

<script src="~/js/seeIsland.js"></script>
